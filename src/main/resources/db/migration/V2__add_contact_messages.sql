-- =============================================================================
-- CONTACT MESSAGES TABLE
-- =============================================================================
-- This table stores contact form submissions from the website
-- Data is stored in the public schema as it's not tenant-specific
CREATE TABLE IF NOT EXISTS contact_messages (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(100) NOT NULL,
    last_name VARCHAR(100) NOT NULL,
    email VARCHAR(255) NOT NULL,
    phone VARCHAR(20),
    company VARCHAR(255),
    subject VARCHAR(100) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN NOT NULL DEFAULT FALSE,
    responded BOOLEAN NOT NULL DEFAULT FALSE,
    ip_address VARCHAR(45),
    user_agent VARCHAR(500),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    responded_at TIMESTAMP,
    responded_by BIGINT,
    
    -- Foreign key to app_user (who responded)
    CONSTRAINT fk_contact_responded_by FOREIGN KEY (responded_by) REFERENCES app_user(id)
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_contact_messages_created_at ON contact_messages(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_contact_messages_email ON contact_messages(email);
CREATE INDEX IF NOT EXISTS idx_contact_messages_subject ON contact_messages(subject);
CREATE INDEX IF NOT EXISTS idx_contact_messages_is_read ON contact_messages(is_read);
CREATE INDEX IF NOT EXISTS idx_contact_messages_responded ON contact_messages(responded);
CREATE INDEX IF NOT EXISTS idx_contact_messages_name ON contact_messages(first_name, last_name);

-- =============================================================================
-- CONTACT MESSAGES VIEWS
-- =============================================================================

-- View for unread messages
CREATE VIEW v_unread_contact_messages AS
SELECT 
    id,
    CONCAT(first_name, ' ', last_name) AS full_name,
    email,
    phone,
    company,
    subject,
    LEFT(message, 200) AS message_preview,
    created_at,
    ip_address
FROM contact_messages
WHERE is_read = FALSE
ORDER BY created_at DESC;

-- View for pending messages (unread + not responded)
CREATE VIEW v_pending_contact_messages AS
SELECT 
    id,
    CONCAT(first_name, ' ', last_name) AS full_name,
    email,
    phone,
    company,
    subject,
    LEFT(message, 200) AS message_preview,
    created_at,
    is_read,
    responded,
    ip_address
FROM contact_messages
WHERE responded = FALSE
ORDER BY 
    CASE WHEN is_read = FALSE THEN 0 ELSE 1 END,
    created_at DESC;

-- View for contact statistics
CREATE VIEW v_contact_statistics AS
SELECT 
    COUNT(*) AS total_messages,
    COUNT(CASE WHEN is_read = FALSE THEN 1 END) AS unread_count,
    COUNT(CASE WHEN responded = FALSE THEN 1 END) AS pending_count,
    COUNT(CASE WHEN responded = TRUE THEN 1 END) AS responded_count,
    COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '7 days' THEN 1 END) AS last_week_count,
    COUNT(CASE WHEN created_at >= CURRENT_DATE - INTERVAL '30 days' THEN 1 END) AS last_month_count,
    COUNT(DISTINCT email) AS unique_contacts,
    AVG(CASE WHEN responded = TRUE AND responded_at IS NOT NULL 
        THEN EXTRACT(EPOCH FROM (responded_at - created_at))/3600 END) AS avg_response_time_hours
FROM contact_messages;
